name: CI Checks
on:
  pull_request:
    branches: [master]
  push: 
    branches: [master]

jobs:
  checkout: 
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Get origin master
        run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master
  dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
        # Checks on PR
      - run: yarn affected:lint --base=origin/master --head=$GITHUB_SHA
        env:
          CI: true

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
        # Checks on PR
      - run: yarn affected:build --base=origin/master --head=$GITHUB_SHA
        env:
          CI: true
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
        # Checks on PR
      - run: yarn affected:test --base=origin/master --head=$GITHUB_SHA
        env:
          CI: true
